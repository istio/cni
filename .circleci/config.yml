version: 2

# Docker environment.
defaults: &defaults
  working_directory: /go/src/istio.io/cni
  docker:
    - image: istio/ci:go1.10-k8s1.10.4-helm2.7.2-minikube0.25
  environment:
    GOPATH: /go
    SKIP_CLEANUP: true

# VM environment. Includes docker.
integrationDefaults: &integrationDefaults
  machine: true
  working_directory: /go/src/istio.io/cni #same as docker
  environment:
    - CHANGE_MINIKUBE_NONE_USER: true
    - GOPATH: /go
    - SKIP_CLEANUP: true
    - KUBECONFIG: /go/out/minikube.conf
    - TEST_ENV: minikube-none

# Common procedure to initialize working directory
initWorkingDir: &initWorkingDir
  type: shell
  name: Initialize Working Directory
  pwd: /
  command: |
    sudo mkdir -p /go/src/istio.io/cni
    sudo chown -R circleci /go
    mkdir -p /go/out/tests
    mkdir -p /go/out/logs
    mkdir -p /home/circleci/logs
    # TODO - temporary until 'machine' image is updated or customized
    GOROOT=$(go env GOROOT)
    sudo rm -r $(go env GOROOT)
    sudo mkdir $GOROOT
    curl https://dl.google.com/go/go1.10.4.linux-amd64.tar.gz | sudo tar xz -C $GOROOT --strip-components=1

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run: GOOS=linux make build
      - run: make lint

  install-cni:
    <<: *integrationDefaults
    steps:
      - <<: *initWorkingDir
      - checkout
      - attach_workspace:
          at:  /go
      - run:
          command: |
            if [ ! -f /go/out/linux_amd64/release/istio-cni ]; then
              # Should only happen when re-running a job, and the workspace is gone
              time make build
            fi
            make docker.all
      - run: make test
      - store_artifacts:
          path: /home/circleci/logs
      - store_artifacts:
          path: /tmp
      - store_test_results:
          path: /go/out/tests

  nightly:
    <<: *integrationDefaults
    steps:
      - <<: *initWorkingDir
      - checkout
      - run: GOOS=linux make build
      - run: TAG=nightly-${CIRCLE_BRANCH} make docker.all
      - run: TAG=nightly-${CIRCLE_BRANCH} make test
      - run:
          command: |
            if [ ! -z "${DOCKER_USER}" ] ; then
              echo "Pushing docker images"

              docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
              TAG=nightly-${CIRCLE_BRANCH} make docker.push
            fi

workflows:
  version: 2

  all:
    jobs:
      - build
      - install-cni:
          requires:
            - build

  # Nightly publish
  nightly:
    triggers:
    - schedule:
        cron: "30 * * * *"
        filters:
          branches:
            only:
            - master
    jobs:
    - build
    - nightly:
        context: org-global
        requires:
          - build

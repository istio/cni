diff --git a/tools/packaging/common/istio-iptables.sh b/tools/packaging/common/istio-iptables.sh
index 780390f9..5fa9099a 100755
--- a/tools/packaging/common/istio-iptables.sh
+++ b/tools/packaging/common/istio-iptables.sh
@@ -117,6 +117,64 @@ function isIPv6() {
   done
   return 0
 }
+#
+# Maximum time to wait for an iptables call to succeed when populating the redirection rules.
+# During that time, iptables call will be attempted for every one second.
+#
+IPTABLES_WAIT=30
+#
+# The path to the iptables command.
+#
+# shellcheck disable=SC2230
+IPTABLES_CMD=$(which iptables)
+#
+# The path to the ip6tables command.
+#
+# shellcheck disable=SC2230
+IP6TABLES_CMD=$(which ip6tables)
+#
+# If true, retries iptables & ip6tables commands in case they fails.
+#
+IPTABLES_RETRY=false
+#
+# Function wrapping a command to retry in case of failure if IPTABLES_RETRY is "true".
+#
+function iptables_retry {
+    if [ "${IPTABLES_RETRY}" != "true" ]; then
+        "$@"
+        return $?
+    fi
+    local iptables_wait=$IPTABLES_WAIT
+    set +o errexit
+    while true; do
+        "$@"
+        local err_code=$?
+        if [[ $err_code == 0 ]]; then
+            break
+        fi
+        iptables_wait=$(( iptables_wait - 1 ))
+        if (( iptables_wait > 0 )); then
+            sleep 1
+        else
+            exit $err_code
+        fi
+    done
+    set -o errexit
+}
+#
+# Function wrapping iptables to retry in case of failure if IPTABLES_RETRY is "true".
+#
+function iptables {
+    iptables_retry "$IPTABLES_CMD" "$@"
+    return $?
+}
+#
+# Function wrapping ip6tables to retry in case of failure if IPTABLES_RETRY is "true".
+#
+function ip6tables {
+    iptables_retry "$IP6TABLES_CMD" "$@"
+    return $?
+}
 
 # Use a comma as the separator for multi-value arguments.
 IFS=,
@@ -298,6 +356,7 @@ set -o errexit
 set -o nounset
 set -o pipefail
 set -x # echo on
+IPTABLES_RETRY=true
 
 # Create a new chain for redirecting outbound traffic to the common Envoy port.
 # In both chains, '-j RETURN' bypasses Envoy and '-j ISTIO_REDIRECT'
@@ -566,6 +625,7 @@ if [ -n "${ENABLE_INBOUND_IPV6}" ]; then
     fi
   fi
 else
+  IPTABLES_RETRY=false
   # Drop all inbound traffic except established connections.
   ip6tables -F INPUT || true
   ip6tables -A INPUT -m state --state ESTABLISHED -j ACCEPT || true
